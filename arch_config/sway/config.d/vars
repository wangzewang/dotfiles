# Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# default: set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi

# Screen locker
set $locker 'swaylock --font Terminus -e -f -i ~/.wallpaper/01.jpg'

# Dbus session
set $dbus 'dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus'

# Idle configuration
set $idle swayidle -w \
		 timeout 600 $locker \
		 timeout 900 'swaymsg "output * dpms off"' \
			  resume 'swaymsg "output * dpms on"' \
		 before-sleep $locker
# This will lock your screen after 600 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Powermenu
set $powermenu 'case $(echo "poweroff\nreboot\nlock" | wofi -d -p "powermenu" -k /dev/null) in \
	poweroff) \
		doas -n poweroff || notify-send "failed to poweroff" \
		;; \
	reboot) \
		doas -n reboot || notify-send "failed to reboot" \
		;; \
	lock) \
		'$locker' \
		;; \
esac'

# Explorer
set $explorer 'while true; do \
	file="$(ls -ap | wofi -d -p $PWD -k /dev/null)"; \
	if [ "${file}" = "" ]; then exit; fi; \
	if [ -f "${file}" ]; then xdg-open "${file}"; exit; fi; \
	cd "${file}"; \
done'

# Screenshot
set $screenshot grim - | wl-copy --type image/png && notify-send "screenshot taken" || notify-send "failed to take screenshot"
set $areascreenshot grim -g "$(slurp)" - | wl-copy --type image/png && notify-send "screenshot taken" || notify-send "failed to take screenshot"
